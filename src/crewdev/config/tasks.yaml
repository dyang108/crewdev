# Dynamic Task Templates - These can be assigned based on current project needs

# Initial Project Tasks
market_research_task:
  description: >
    Conduct comprehensive market research for the {project_name} project.
    Analyze user needs, competitor landscape, and market opportunities.
    Identify key user personas and their pain points.
  expected_output: >
    A detailed market research report including:
    - User personas and their needs
    - Competitor analysis
    - Market opportunities and challenges
    - Key requirements and success metrics
  agent: product_manager

# Dynamic Technical Tasks
technical_architecture_task:
  description: >
    Based on the market research and current project needs, design the technical architecture for {project_name}.
    Define system components, data models, API specifications, and technology stack.
    Consider scalability, security, and maintainability requirements.
  expected_output: >
    A comprehensive technical architecture document including:
    - System architecture diagram
    - Technology stack recommendations
    - API specifications
    - Database schema design
    - Security considerations
  agent: staff_engineer

# Dynamic Implementation Tasks
frontend_implementation_task:
  description: >
    Implement the frontend components for {project_name} based on the technical architecture and current requirements.
    Focus on user experience, responsive design, and modern web standards.
    Ensure accessibility and performance optimization.
    Use the available tools to create real files under the project directory.
    First, create or ensure the project directory exists at 'projects/{project_name}'.
    Then write all source files to 'projects/{project_name}/...'.
    Do not paste full source in the report; instead, create files using tools and summarize paths created.
  expected_output: >
    Frontend implementation including:
    - React/TypeScript components
    - Responsive UI design
    - State management setup
    - API integration code
    - Unit tests for components
  agent: senior_engineer_frontend

backend_implementation_task:
  description: >
    Implement the backend services and APIs for {project_name} based on the technical architecture and current requirements.
    Focus on performance, security, and scalability. Implement proper error handling and logging.
    Use the available tools to create real files under the project directory.
    First, create or ensure the project directory exists at 'projects/{project_name}'.
    Then write all source files to 'projects/{project_name}/...'.
    Do not paste full source in the report; instead, create files using tools and summarize paths created.
  expected_output: >
    Backend implementation including:
    - API endpoints and controllers
    - Database models and migrations
    - Authentication and authorization
    - Business logic implementation
    - Unit and integration tests
  agent: senior_engineer_backend

# Dynamic DevOps Tasks
devops_setup_task:
  description: >
    Set up CI/CD pipelines, containerization, and deployment infrastructure for {project_name}.
    Implement monitoring, logging, and operational best practices.
    Use the available tools to create real files under the project directory.
    First, create or ensure the project directory exists at 'projects/{project_name}'.
    Then write all configuration files to 'projects/{project_name}/...'.
    Do not paste full source in the report; instead, create files using tools and summarize paths created.
  expected_output: >
    DevOps implementation including:
    - Docker containerization
    - CI/CD pipeline configuration
    - Kubernetes deployment manifests
    - Monitoring and logging setup
    - Infrastructure as code
  agent: senior_engineer_devops

# Dynamic Review Tasks
technical_skeptic_review_task:
  description: >
    Review all technical decisions, architecture choices, and implementation patterns
    with a critical eye. Challenge assumptions, identify potential technical debt,
    and suggest improvements for modularity, reusability, and maintainability.
    Focus on clean code principles and long-term code quality.
  expected_output: >
    Technical skeptic review report including:
    - Critical analysis of architecture decisions
    - Identification of potential technical debt
    - Suggestions for better abstractions and modularity
    - Code quality recommendations
    - Refactoring opportunities
    - Alternative design patterns to consider
  agent: technical_skeptic

code_review_task:
  description: >
    Review all implementations from the senior engineers and provide feedback on code quality,
    architecture alignment, and best practices. Ensure consistency across the codebase.
  expected_output: >
    Code review report including:
    - Code quality assessment
    - Architecture compliance review
    - Security and performance recommendations
    - Refactoring suggestions
    - Best practices implementation
  agent: staff_engineer

# Dynamic Integration and Testing Tasks
final_integration_task:
  description: >
    Integrate all components and perform end-to-end testing. Ensure the system works
    as a cohesive unit and meets all requirements from the market research.
    Verify that all referenced files exist under 'projects/{project_name}' and update documentation accordingly.
  expected_output: >
    Integration report including:
    - End-to-end testing results
    - Performance benchmarks
    - Security assessment
    - Deployment readiness checklist
    - User acceptance testing results
  agent: product_manager

# Dynamic Bug Fix Tasks
bug_fix_task:
  description: >
    Investigate and fix the reported bug: {bug_description}
    Analyze the issue, identify the root cause, and implement a proper fix.
    Ensure the fix doesn't introduce new issues and follows best practices.
  expected_output: >
    Bug fix implementation including:
    - Root cause analysis
    - Fix implementation
    - Test cases to prevent regression
    - Documentation of the fix
  agent: staff_engineer

# Dynamic Feature Implementation Tasks
feature_implementation_task:
  description: >
    Implement the requested feature: {feature_description}
    Follow the technical architecture and coding standards.
    Ensure proper testing and documentation.
  expected_output: >
    Feature implementation including:
    - Feature code implementation
    - Unit tests
    - Integration tests
    - Documentation
    - API documentation if applicable
  agent: staff_engineer

# Dynamic Research Tasks
technical_research_task:
  description: >
    Research the following technical topic: {research_topic}
    Provide comprehensive analysis, recommendations, and implementation guidance.
  expected_output: >
    Technical research report including:
    - Analysis of available options
    - Pros and cons of each approach
    - Recommendations
    - Implementation guidance
  agent: staff_engineer

# Dynamic Planning Tasks
next_steps_planning_task:
  description: >
    Based on the current project state and completed work, determine what should happen next.
    Consider dependencies, priorities, and team capacity.
  expected_output: >
    Next steps plan including:
    - Prioritized task list
    - Dependencies and blockers
    - Resource allocation recommendations
    - Timeline estimates
  agent: product_manager
